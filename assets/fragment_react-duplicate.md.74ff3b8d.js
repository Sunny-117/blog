import{_ as a,o as n,c as e,a as l}from"./app.f9cf8683.js";const B=JSON.parse('{"title":"解决 npm link 本地代码后 react 库存在多份实例的问题","description":"","frontmatter":{},"headers":[{"level":2,"title":"非法 Hook 调用错误","slug":"非法-hook-调用错误","link":"#非法-hook-调用错误","children":[]},{"level":2,"title":"报错原因","slug":"报错原因","link":"#报错原因","children":[]},{"level":2,"title":"为什么 npm install 没有问题，npm link 有问题","slug":"为什么-npm-install-没有问题-npm-link-有问题","link":"#为什么-npm-install-没有问题-npm-link-有问题","children":[]},{"level":2,"title":"怎么解决这个问题","slug":"怎么解决这个问题","link":"#怎么解决这个问题","children":[{"level":3,"title":"使用 link 的方式将组件库的 react 依赖指向到主项目的 react 依赖","slug":"使用-link-的方式将组件库的-react-依赖指向到主项目的-react-依赖","link":"#使用-link-的方式将组件库的-react-依赖指向到主项目的-react-依赖","children":[]},{"level":3,"title":"使用 alias 为 Nodejs 指定 react 加载目录","slug":"使用-alias-为-nodejs-指定-react-加载目录","link":"#使用-alias-为-nodejs-指定-react-加载目录","children":[]}]}],"relativePath":"fragment/react-duplicate.md","lastUpdated":1740908463000}'),o={name:"fragment/react-duplicate.md"};function p(c,s,r,t,i,d){return n(),e("div",null,s[0]||(s[0]=[l(`<h1 id="解决-npm-link-本地代码后-react-库存在多份实例的问题" tabindex="-1">解决 npm link 本地代码后 react 库存在多份实例的问题 <a class="header-anchor" href="#解决-npm-link-本地代码后-react-库存在多份实例的问题" aria-hidden="true">#</a></h1><h2 id="非法-hook-调用错误" tabindex="-1">非法 Hook 调用错误 <a class="header-anchor" href="#非法-hook-调用错误" aria-hidden="true">#</a></h2><p>在调试本地组件库代码时，link 到主项目时报错了如下错误</p><div class="language- line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#abb2bf;">Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:</span></span>
<span class="line"><span style="color:#abb2bf;">1. You might have mismatching versions of React and the renderer (such as React DOM)</span></span>
<span class="line"><span style="color:#abb2bf;">2. You might be breaking the Rules of Hooks</span></span>
<span class="line"><span style="color:#abb2bf;">3. You might have more than one copy of React in the same app See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.</span></span>
<span class="line"><span style="color:#abb2bf;"></span></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#b392f0;">Error: Invalid hook call. Hooks can only be called inside of the body of a function component. This could happen for one of the following reasons:</span></span>
<span class="line"><span style="color:#b392f0;">1. You might have mismatching versions of React and the renderer (such as React DOM)</span></span>
<span class="line"><span style="color:#b392f0;">2. You might be breaking the Rules of Hooks</span></span>
<span class="line"><span style="color:#b392f0;">3. You might have more than one copy of React in the same app See https://fb.me/react-invalid-hook-call for tips about how to debug and fix this problem.</span></span>
<span class="line"><span style="color:#b392f0;"></span></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><p>但是将代码发布到本地仓库后，install 下来是不会有问题的。</p><h2 id="报错原因" tabindex="-1">报错原因 <a class="header-anchor" href="#报错原因" aria-hidden="true">#</a></h2><p>React 官方文档上解释了这个原因。</p><blockquote><p>为了使 Hook 正常工作，你应用代码中的 react 依赖以及 react-dom 的 package 内部使用的 react 依赖，必须解析为同一个模块。</p></blockquote><p>也就是说，在你的应用里找到了两份 react 实例，并且 react-dom 中引用的 react 实例与直接 import 的 react 实例不是同一份。对应到我报错的场景里，就是 link 到本地组件库时，组件库中 import 了一份 react-dom, 而这一份 react-dom 引用的 react 实例，是本地组件库中安装的 react 实例。而非主应用中安装的那一份 react 实例。</p><h2 id="为什么-npm-install-没有问题-npm-link-有问题" tabindex="-1">为什么 npm install 没有问题，npm link 有问题 <a class="header-anchor" href="#为什么-npm-install-没有问题-npm-link-有问题" aria-hidden="true">#</a></h2><p>npm install 在安装依赖的时候，会合并相同依赖，安装在最外层的 node_modules 中。所以只有一份依赖。而 npm link 是直接引用本地目录，本地目录的 node_modules 会和主项目的 node_modules 同时存在两份相同的引用。</p><h2 id="怎么解决这个问题" tabindex="-1">怎么解决这个问题 <a class="header-anchor" href="#怎么解决这个问题" aria-hidden="true">#</a></h2><p>要解决这个问题，就需要将组件库 react-dom 依赖的 react 指向主项目 node_modules 中安装的那一份 react 实例。我们可以通过两种方式来完成这个操作。</p><h3 id="使用-link-的方式将组件库的-react-依赖指向到主项目的-react-依赖" tabindex="-1">使用 link 的方式将组件库的 react 依赖指向到主项目的 react 依赖 <a class="header-anchor" href="#使用-link-的方式将组件库的-react-依赖指向到主项目的-react-依赖" aria-hidden="true">#</a></h3><div class="language-shell line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">shell</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#56B6C2;">cd</span><span style="color:#ABB2BF;"> [PACKAGE]</span></span>
<span class="line"><span style="color:#ABB2BF;">npm </span><span style="color:#98C379;">link</span><span style="color:#ABB2BF;"> [PROJECT]/node_modules/react</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#B392F0;">cd [PACKAGE]</span></span>
<span class="line"><span style="color:#B392F0;">npm </span><span style="color:#9DB1C5;">link</span><span style="color:#B392F0;"> [PROJECT]/node_modules/react</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="使用-alias-为-nodejs-指定-react-加载目录" tabindex="-1">使用 alias 为 Nodejs 指定 react 加载目录 <a class="header-anchor" href="#使用-alias-为-nodejs-指定-react-加载目录" aria-hidden="true">#</a></h3><div class="language-js line-numbers-mode"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki one-dark-pro vp-code-dark"><code><span class="line"><span style="color:#7F848E;font-style:italic;">// /build/wepack.base.config.js</span></span>
<span class="line"><span style="color:#C678DD;">const</span><span style="color:#ABB2BF;"> </span><span style="color:#E5C07B;">config</span><span style="color:#ABB2BF;"> </span><span style="color:#56B6C2;">=</span><span style="color:#ABB2BF;"> {</span></span>
<span class="line"><span style="color:#ABB2BF;">  </span><span style="color:#E06C75;">alias</span><span style="color:#ABB2BF;">: {</span></span>
<span class="line"><span style="color:#ABB2BF;">    </span><span style="color:#E06C75;">react</span><span style="color:#ABB2BF;">: </span><span style="color:#E5C07B;">path</span><span style="color:#ABB2BF;">.</span><span style="color:#61AFEF;">join</span><span style="color:#ABB2BF;">(</span><span style="color:#E06C75;">__dirname</span><span style="color:#ABB2BF;">, </span><span style="color:#98C379;">&quot;../node_modules/react&quot;</span><span style="color:#ABB2BF;">),</span></span>
<span class="line"><span style="color:#ABB2BF;">  },</span></span>
<span class="line"><span style="color:#ABB2BF;">};</span></span>
<span class="line"></span></code></pre><pre class="shiki min-dark vp-code-light"><code><span class="line"><span style="color:#6B737C;">// /build/wepack.base.config.js</span></span>
<span class="line"><span style="color:#F97583;">const</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">config</span><span style="color:#B392F0;"> </span><span style="color:#F97583;">=</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">  alias</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> {</span></span>
<span class="line"><span style="color:#B392F0;">    react</span><span style="color:#F97583;">:</span><span style="color:#B392F0;"> </span><span style="color:#79B8FF;">path</span><span style="color:#B392F0;">.join(__dirname</span><span style="color:#BBBBBB;">,</span><span style="color:#B392F0;"> </span><span style="color:#FFAB70;">&quot;../node_modules/react&quot;</span><span style="color:#B392F0;">)</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">  }</span><span style="color:#BBBBBB;">,</span></span>
<span class="line"><span style="color:#B392F0;">};</span></span>
<span class="line"></span></code></pre><div class="line-numbers-wrapper" aria-hidden="true"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div>`,17)]))}const m=a(o,[["render",p]]);export{B as __pageData,m as default};
