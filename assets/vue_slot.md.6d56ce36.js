import{_ as e,o as l,c as s,a}from"./app.f9cf8683.js";const u=JSON.parse('{"title":"一篇精通 slot","description":"","frontmatter":{},"headers":[{"level":2,"title":"slot 是什么？有什么作用？","slug":"slot-是什么-有什么作用","link":"#slot-是什么-有什么作用","children":[]},{"level":2,"title":"实现原理","slug":"实现原理","link":"#实现原理","children":[]}],"relativePath":"vue/slot.md","lastUpdated":1740908463000}'),o={name:"vue/slot.md"};function r(i,t,n,d,c,h){return l(),s("div",null,t[0]||(t[0]=[a('<h1 id="一篇精通-slot" tabindex="-1">一篇精通 slot <a class="header-anchor" href="#一篇精通-slot" aria-hidden="true">#</a></h1><div class="danger custom-block"><p class="custom-block-title">DANGER</p><p>写作中</p></div><h2 id="slot-是什么-有什么作用" tabindex="-1">slot 是什么？有什么作用？ <a class="header-anchor" href="#slot-是什么-有什么作用" aria-hidden="true">#</a></h2><p>slot 又名插槽，是 Vue 的内容分发机制，组件内部的模板引擎使用 slot 元素作为承载分发内容的出口。插槽 slot 是子组件的一个模板标签元素，而这一个标签元素是否显示，以及怎么显示是由父组件决定的。slot 又分三类，默认插槽，具名插槽和作用域插槽。</p><ul><li>默认插槽：又名匿名查抄，当 slot 没有指定 name 属性值的时候一个默认显示插槽，一个组件内只有有一个匿名插槽。</li><li>具名插槽：带有具体名字的插槽，也就是带有 name 属性的 slot，一个组件可以出现多个具名插槽。</li><li>作用域插槽：默认插槽、具名插槽的一个变体，可以是匿名插槽，也可以是具名插槽，该插槽的不同点是在子组件渲染作用域插槽时，可以将子组件内部的数据传递给父组件，让父组件根据子组件的传递过来的数据决定如何渲染该插槽。<strong>本质是子组件可以通过插槽的位置绑定一些数据，让父组件插槽位置可以用这个数据。</strong></li></ul><h2 id="实现原理" tabindex="-1">实现原理 <a class="header-anchor" href="#实现原理" aria-hidden="true">#</a></h2><p>当子组件 vm 实例化时,获取到父组件传入的 slot 标签的内容,存放在 vm.slot 中，默认插槽为 um. slot.default，具名插槽为 <a href="http://vm.slot.xxx" target="_blank" rel="noreferrer">vm.slot.xxx</a>，xxx 为插槽名，当组件执行渲染函数时候，遇到 slot 标签，使用 slot 中的内容进行替换，此时可以为插槽传递数据，若存在数据，则可称该插槽为作用域插槽。</p>',7)]))}const m=e(o,[["render",r]]);export{u as __pageData,m as default};
