import{_ as e,o as i,c as r,a}from"./app.f9cf8683.js";const u=JSON.parse('{"title":"React 动画","description":"","frontmatter":{},"headers":[{"level":2,"title":"React 动画 - CSSTransition","slug":"react-动画-csstransition","link":"#react-动画-csstransition","children":[]},{"level":2,"title":"React 动画 - SwitchTransition","slug":"react-动画-switchtransition","link":"#react-动画-switchtransition","children":[]},{"level":2,"title":"React 动画 - TransitionGroup","slug":"react-动画-transitiongroup","link":"#react-动画-transitiongroup","children":[]}],"relativePath":"react/transition.md","lastUpdated":1740908463000}'),n={name:"react/transition.md"};function o(s,t,l,c,p,d){return i(),r("div",null,t[0]||(t[0]=[a('<h1 id="react-动画" tabindex="-1">React 动画 <a class="header-anchor" href="#react-动画" aria-hidden="true">#</a></h1><p>React 动画库：react-transition-group <strong>文档在 npm 搜索</strong><a href="https://reactcommunity.org/react-transition-group/" target="_blank" rel="noreferrer">https://reactcommunity.org/react-transition-group/</a></p><h2 id="react-动画-csstransition" tabindex="-1">React 动画 - CSSTransition <a class="header-anchor" href="#react-动画-csstransition" aria-hidden="true">#</a></h2><p>当进入时，发生：</p><ol><li>为 CSSTransition 内部的 DOM 根元素（后续统一称之为 DOM 元素）添加样式 enter</li><li>在一下帧(enter 样式已经完全应用到了元素)，立即为该元素添加样式 enter-active</li><li>当 timeout 结束后，去掉之前的样式，添加样式 enter-done</li></ol><p>当退出时，发生：</p><ol><li>为 CSSTransition 内部的 DOM 根元素（后续统一称之为 DOM 元素）添加样式 exit</li><li>在一下帧(exit 样式已经完全应用到了元素)，立即为该元素添加样式 exit-active</li><li>当 timeout 结束后，去掉之前的样式，添加样式 exit-done</li></ol><p>设置<strong>classNames</strong>属性，可以指定类样式的名称</p><ol><li>字符串：为类样式添加<strong>前缀</strong></li><li>对象：为每个类样式指定具体的名称（非前缀）</li></ol><p><strong>关于首次渲染时的类样式，appear、apear-active、apear-done，它和 enter 的唯一区别在于完成时，会同时加入 apear-done 和 enter-done</strong></p><p>还可以与 Animate.css 联用</p><h2 id="react-动画-switchtransition" tabindex="-1">React 动画 - SwitchTransition <a class="header-anchor" href="#react-动画-switchtransition" aria-hidden="true">#</a></h2><p>和 CSSTransition 的区别：用于<strong>有秩序</strong>的切换内部组件</p><p>默认情况下：out-in 先退出后进入</p><ol><li>当 key 值改变时，会将之前的 DOM 根元素添加退出样式（exit,exit-active)</li><li>退出完成后，将该 DOM 元素移除</li><li>重新渲染内部 DOM 元素</li><li>为新渲染的 DOM 根元素添加进入样式(enter, enter-active, enter-done)</li></ol><p>in-out:</p><ol><li>重新渲染内部 DOM 元素，保留之前的元素</li><li>为新渲染的 DOM 根元素添加进入样式(enter, enter-active, enter-done)</li><li>将之前的 DOM 根元素添加退出样式（exit,exit-active)</li><li>退出完成后，将该 DOM 元素移除</li></ol><blockquote><p>该库寻找 dom 元素的方式，是使用已经过时的 API：findDomNode，该方法可以找到某个组件下的 DOM 根元素，先保留，创建新的之后在删除</p></blockquote><h2 id="react-动画-transitiongroup" tabindex="-1">React 动画 - TransitionGroup <a class="header-anchor" href="#react-动画-transitiongroup" aria-hidden="true">#</a></h2><p>该组件的 children，接收多个 Transition 或 CSSTransition 组件，该组件用于根据这些子组件的 key 值，控制他们的进入和退出状态</p>',20)]))}const g=e(n,[["render",o]]);export{u as __pageData,g as default};
